{"version":3,"sources":["webpack:///./src/context/BackendConnectionContext.ts","webpack:///./src/types/index.ts","webpack:///./src/css/app.scss","webpack:///./src/App.tsx","webpack:///./src/css/app.scss?92b9","webpack:///./src/Main.tsx","webpack:///./src/components/BackendConnection.tsx","webpack:///./src/types/clientstatus.ts","webpack:///./src/types/messages.ts","webpack:///./src/types/settings.ts","webpack:///./src/pages/Slideshow/index.ts","webpack:///./src/pages/Slideshow/SlideshowPage.tsx","webpack:///./src/components/ConditionalRender.tsx","webpack:///./src/components/Heading.tsx","webpack:///./src/components/PageContainer.tsx","webpack:///./src/components/Settings.tsx","webpack:///./src/components/SettingsForm/SettingsForm.tsx","webpack:///./src/components/SettingsForm/components/ConnectionStatus.tsx","webpack:///./src/components/Slideshow/index.ts","webpack:///./src/components/Slideshow/Slideshow.tsx","webpack:///./src/components/Slideshow/components/Slide.tsx","webpack:///./src/pages/Slideshow/components/ImageOrientationWarning.tsx"],"names":["BackendConnectionContext","createContext","client","undefined","setClient","clientStatus","ClientStatus","UNKNOWN","setClientStatus","images","setImages","___CSS_LOADER_EXPORT___","push","module","i","render","document","getElementById","options","locals","BackendConnection","children","useState","INITAL","Provider","value","MessageType","createSettings","interval","apiUrl","settings","setSettings","Heading","ConditionalRender","shouldRender","CSS","supports","ImageOrientationWarning","className","id","SettingsForm","minInterval","maxInterval","backendContext","useContext","useEffect","w3cwebsocket","onopen","console","log","OK","onerror","err","error","ERROR","onmessage","message","payload","JSON","parse","String","data","type","Full","NewImage","DeleteImage","e","onclose","DISCONNECTED","htmlFor","title","max","min","defaultValue","step","onChange","num","target","valueAsNumber","Math","readOnly","ConnectionStatus","toLowerCase","imageIndex","setImageIndex","nextRotate","setNextRotate","Date","now","imageInterval","setImageInterval","setApiUrl","getTimestamp","imageTimer","setInterval","length","clearInterval","slides","key","index","imageName","active","src","alt","decoding","href","rel"],"mappings":"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","file":"client_093c02c9ca9cfd4a75b9.bundle.js","sourcesContent":["import { ClientStatus } from \"@/types\";\nimport { createContext } from \"react\";\nimport { w3cwebsocket } from \"websocket\";\n\ntype BackendConnectionProps = {\n  client: w3cwebsocket | undefined;\n  setClient:\n    | React.Dispatch<React.SetStateAction<w3cwebsocket | undefined>>\n    | undefined;\n\n  clientStatus: ClientStatus;\n  setClientStatus:\n    | React.Dispatch<React.SetStateAction<ClientStatus>>\n    | undefined;\n\n  images: string[];\n  setImages: React.Dispatch<React.SetStateAction<string[]>> | undefined;\n};\n\nexport const BackendConnectionContext = createContext<BackendConnectionProps>({\n  client: undefined,\n  setClient: undefined,\n\n  clientStatus: ClientStatus.UNKNOWN,\n  setClientStatus: undefined,\n\n  images: [],\n  setImages: undefined,\n});\n","export * from \"./clientstatus\";\nexport * from \"./messages\";\nexport * from \"./settings\";\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media all and (display-mode: fullscreen){body{color:red;background-color:#fff !important}.no-fullscreen{display:none}*{height:100%}html,body{overflow-y:hidden;cursor:none;padding:0;margin:0;text-align:center}.slide,.slide img{position:relative;top:50%;transform:translateY(-50%)}.slide img{max-width:100%;max-height:100%;height:auto}.slide label{display:none}.inactive{display:none}}@media not all and (display-mode: fullscreen){body{font-weight:normal}.fullscreen-only{display:none}#slideshow{border:2px solid red;padding:.25em}.slide{display:inline-block;position:relative}.slide label{position:absolute;left:0;top:0;padding:.25em;background-color:#00bfff;opacity:.65}.slide{max-width:30%;max-height:200px;margin:.2em;border:3px solid transparent}.slide img{max-width:100%;max-height:200px}.active{border:3px solid #00bfff}.inactive label{background-color:gray;opacity:.75}}#navigator-toolbox[fullscreenShouldAnimate]{transition:none !important}*{box-sizing:border-box}h1,h2{margin:0}h2{color:#d3d3d3}body{font-weight:bold;background-color:#000;color:#fff;letter-spacing:.04em}.wrapper{width:max(80%, 800px);min-width:800px;margin:0 auto}code{font-weight:normal;background-color:#505050;padding:.1em .25em}#settings{border:2px solid #000;padding:.5em;margin-bottom:1em}#settings h1{margin-top:0;text-transform:uppercase;color:#d3d3d3}.highlight{background-color:#ff0;color:#000;padding:.1em;font-weight:normal}.slide img{image-orientation:from-image}.input{margin:.25em 0}.input input{margin-left:.5em}input:read-only{background-color:#d3d3d3}p,h1,h2{text-align:center;margin-left:auto;margin-right:auto}p{max-width:65ch;font-weight:normal}.disclaimer{background-color:darkred;padding:.1em;margin:1em 0}.disclaimer a{color:gold;font-weight:bold}.disclaimer a:hover,.disclaimer a:active{color:#6495ed}.hide{display:none}.clientStatus-ok{color:lime}.clientStatus-error{color:red}.clientStatus-connecting{color:#00fc00}.clientStatus-disconnected{color:crimson}.clientStatus-unknown{color:gold}.clientStatus-preparing{color:gray}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/app.scss\",\"webpack://./src/css/fullscreen.scss\",\"webpack://./src/css/no-fullscreen.scss\"],\"names\":[],\"mappings\":\"AAAA,0CAAA,KCCE,SAAA,CACA,gCAAA,CAGF,eACE,YAAA,CAGF,EACE,WAAA,CAGF,UAEE,iBAAA,CACA,WAAA,CACA,SAAA,CACA,QAAA,CACA,iBAAA,CAGF,kBAEE,iBAAA,CACA,OAAA,CACA,0BAAA,CAGF,WACE,cAAA,CACA,eAAA,CACA,WAAA,CAGF,aACE,YAAA,CAGF,UACE,YAAA,CAAA,CDpCF,8CEJA,KACE,kBAAA,CAGF,iBACE,YAAA,CAGF,WACE,oBAAA,CACA,aAAA,CAGF,OACE,oBAAA,CACA,iBAAA,CAMF,aACE,iBAAA,CACA,MAAA,CACA,KAAA,CACA,aAAA,CACA,wBARY,CASZ,WAAA,CAGF,OACE,aAAA,CACA,gBAAA,CACA,WAAA,CACA,4BAAA,CAGF,WACE,cAAA,CACA,gBAAA,CAGF,QACE,wBAAA,CAGF,gBACE,qBA5Bc,CA6Bd,WAAA,CAAA,CFxCF,4CACE,0BAAA,CAGF,EACE,qBAAA,CAGF,MAEE,QAAA,CAGF,GACE,aAAA,CAGF,KACE,gBAAA,CACA,qBAAA,CACA,UAAA,CACA,oBAAA,CAGF,SACE,qBAAA,CACA,eAAA,CACA,aAAA,CAGF,KACE,kBAAA,CACA,wBAAA,CACA,kBAAA,CAGF,UACE,qBAAA,CACA,YAAA,CACA,iBAAA,CAGF,aACE,YAAA,CACA,wBAAA,CACA,aAAA,CAGF,WACE,qBAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CAGF,WACE,4BAAA,CAGF,OACE,cAAA,CAGF,aACE,gBAAA,CAGF,gBACE,wBAAA,CAGF,QAGE,iBAAA,CACA,gBAAA,CACA,iBAAA,CAGF,EACE,cAAA,CACA,kBAAA,CAGF,YACE,wBAAA,CACA,YAAA,CACA,YAAA,CAEA,cACE,UAAA,CACA,gBAAA,CAGF,yCAEE,aAAA,CAIJ,MACE,YAAA,CAGF,iBACE,UAAA,CAGF,oBACE,SAAA,CAGF,yBACE,aAAA,CAGF,2BACE,aAAA,CAGF,sBACE,UAAA,CAGF,wBACE,UAAA\",\"sourcesContent\":[\"@media all and (display-mode: fullscreen) {\\n  @import \\\"./fullscreen.scss\\\";\\n}\\n\\n@media not all and (display-mode: fullscreen) {\\n  @import \\\"./no-fullscreen.scss\\\";\\n}\\n\\n#navigator-toolbox[fullscreenShouldAnimate] {\\n  transition: none !important;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\\nh1,\\nh2 {\\n  margin: 0;\\n}\\n\\nh2 {\\n  color: lightgray;\\n}\\n\\nbody {\\n  font-weight: bold;\\n  background-color: black;\\n  color: white;\\n  letter-spacing: 0.04em;\\n}\\n\\n.wrapper {\\n  width: max(80%, 800px);\\n  min-width: 800px;\\n  margin: 0 auto;\\n}\\n\\ncode {\\n  font-weight: normal;\\n  background-color: rgb(80, 80, 80);\\n  padding: 0.1em 0.25em;\\n}\\n\\n#settings {\\n  border: 2px solid black;\\n  padding: 0.5em;\\n  margin-bottom: 1em;\\n}\\n\\n#settings h1 {\\n  margin-top: 0;\\n  text-transform: uppercase;\\n  color: lightgray;\\n}\\n\\n.highlight {\\n  background-color: yellow;\\n  color: black;\\n  padding: 0.1em;\\n  font-weight: normal;\\n}\\n\\n.slide img {\\n  image-orientation: from-image;\\n}\\n\\n.input {\\n  margin: 0.25em 0;\\n}\\n\\n.input input {\\n  margin-left: 0.5em;\\n}\\n\\ninput:read-only {\\n  background-color: lightgray;\\n}\\n\\np,\\nh1,\\nh2 {\\n  text-align: center;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\np {\\n  max-width: 65ch;\\n  font-weight: normal;\\n}\\n\\n.disclaimer {\\n  background-color: darkred;\\n  padding: 0.1em;\\n  margin: 1em 0;\\n\\n  a {\\n    color: gold;\\n    font-weight: bold;\\n  }\\n\\n  a:hover,\\n  a:active {\\n    color: cornflowerblue;\\n  }\\n}\\n\\n.hide {\\n  display: none;\\n}\\n\\n.clientStatus-ok {\\n  color: lime;\\n}\\n\\n.clientStatus-error {\\n  color: red;\\n}\\n\\n.clientStatus-connecting {\\n  color: darken($color: lime, $amount: 0.5);\\n}\\n\\n.clientStatus-disconnected {\\n  color: crimson;\\n}\\n\\n.clientStatus-unknown {\\n  color: gold;\\n}\\n\\n.clientStatus-preparing {\\n  color: gray;\\n}\\n\",\"body {\\n  color: red;\\n  background-color: white !important;\\n}\\n\\n.no-fullscreen {\\n  display: none;\\n}\\n\\n* {\\n  height: 100%;\\n}\\n\\nhtml,\\nbody {\\n  overflow-y: hidden;\\n  cursor: none;\\n  padding: 0;\\n  margin: 0;\\n  text-align: center;\\n}\\n\\n.slide,\\n.slide img {\\n  position: relative;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n.slide img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  height: auto;\\n}\\n\\n.slide label {\\n  display: none;\\n}\\n\\n.inactive {\\n  display: none;\\n}\\n\",\"body {\\n  font-weight: normal;\\n}\\n\\n.fullscreen-only {\\n  display: none;\\n}\\n\\n#slideshow {\\n  border: 2px solid red;\\n  padding: 0.25em;\\n}\\n\\n.slide {\\n  display: inline-block;\\n  position: relative;\\n}\\n\\n$activeColor: deepskyblue;\\n$inactiveColor: gray;\\n\\n.slide label {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  padding: 0.25em;\\n  background-color: $activeColor;\\n  opacity: 0.65;\\n}\\n\\n.slide {\\n  max-width: 30%;\\n  max-height: 200px;\\n  margin: 0.2em;\\n  border: 3px solid transparent;\\n}\\n\\n.slide img {\\n  max-width: 100%;\\n  max-height: 200px;\\n}\\n\\n.active {\\n  border: 3px solid $activeColor;\\n}\\n\\n.inactive label {\\n  background-color: $inactiveColor;\\n  opacity: 0.75;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./css/app.scss\";\n\nimport Main from \"./Main\";\n\nrender(<Main />, document.getElementById(\"main\"));\n","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./app.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from \"react\";\nimport { BackendConnection } from \"./components/BackendConnection\";\nimport SlideshowPage from \"./pages/Slideshow\";\n\nconst Main: React.FC = () => (\n  <BackendConnection>\n    <SlideshowPage />\n  </BackendConnection>\n);\n\nexport default Main;\n","import { BackendConnectionContext } from \"@/context/BackendConnectionContext\";\nimport { ClientStatus } from \"@/types\";\nimport React, { useState } from \"react\";\nimport { w3cwebsocket } from \"websocket\";\n\nexport const BackendConnection: React.FC = ({ children }) => {\n  const [client, setClient] = useState<w3cwebsocket | undefined>(undefined);\n  const [clientStatus, setClientStatus] = useState<ClientStatus>(\n    ClientStatus.INITAL\n  );\n  const [images, setImages] = useState<string[]>([]);\n\n  return (\n    <BackendConnectionContext.Provider\n      value={{\n        client,\n        setClient,\n\n        clientStatus,\n        setClientStatus,\n\n        images,\n        setImages,\n      }}\n    >\n      {children}\n    </BackendConnectionContext.Provider>\n  );\n};\n","export enum ClientStatus {\n  OK = \"OK\",\n  ERROR = \"Error\",\n  CONNECTING = \"Connecting\",\n  DISCONNECTED = \"Disconnected\",\n  UNKNOWN = \"UNKNOWN (REPORT THIS)\",\n  INITAL = \"Preparing\",\n}\n","export enum MessageType {\n  Full = \"full\",\n  NewImage = \"new-image\",\n  DeleteImage = \"delete-image\",\n}\n\nexport interface FullSocketMessage {\n  type: MessageType.Full;\n  data: string[];\n}\n\nexport interface NewImageSocketMessage {\n  type: MessageType.NewImage;\n  data: string;\n}\n\nexport interface DeleteImageSocketMessage {\n  type: MessageType.DeleteImage;\n  data: string;\n}\n\nexport type SocketMessage =\n  | FullSocketMessage\n  | NewImageSocketMessage\n  | DeleteImageSocketMessage;\n","export interface ISettings {\n  interval: number;\n  apiUrl: string;\n}\n\nexport const createSettings = () =>\n  ({\n    interval: 1000 * 5,\n    apiUrl: \"127.0.0.1:45454\", // TODO: Read from env?\n  } as ISettings);\n","import SlideshowPage from \"./SlideshowPage\";\nexport default SlideshowPage;\n","import { ConditionalRender } from \"@/components/ConditionalRender\";\nimport { Heading } from \"@/components/Heading\";\nimport PageContainer from \"@/components/PageContainer\";\nimport Settings from \"@/components/Settings\";\nimport Slideshow from \"@/components/Slideshow\";\nimport { createSettings } from \"@/types\";\nimport React, { useState } from \"react\";\nimport { ImageOrientationWarning } from \"./components/ImageOrientationWarning\";\n\nconst SlideshowPage: React.FC = () => {\n  const [settings, setSettings] = useState(createSettings());\n\n  return (\n    <PageContainer>\n      <Heading />\n\n      <Settings settings={settings} setSettings={setSettings} />\n\n      <ConditionalRender\n        shouldRender={!CSS.supports(\"image-orientation\", \"from-image\")}\n      >\n        <ImageOrientationWarning />\n      </ConditionalRender>\n\n      <Slideshow settings={settings} />\n    </PageContainer>\n  );\n};\n\nexport default SlideshowPage;\n","import React from \"react\";\n\ntype ConditionalRenderProps = {\n  shouldRender: boolean;\n};\n\nexport const ConditionalRender: React.FC<ConditionalRenderProps> = ({\n  shouldRender,\n  children,\n}) => (shouldRender ? <>{children}</> : null);\n","import React from \"react\";\n\nexport const Heading: React.FC = () => (\n  <h1 className=\"no-fullscreen\">TTU Slideshow</h1>\n);\n","import * as React from \"react\";\n\nconst PageContainer: React.FC = ({ children }) => (\n  <div className=\"wrapper\">\n    <div className=\"page-container\">{children}</div>\n  </div>\n);\n\nexport default PageContainer;\n","import { ISettings } from \"@/types\";\nimport React, { SetStateAction } from \"react\";\nimport { SettingsForm } from \"./SettingsForm/SettingsForm\";\n\nexport type SettingsProps = {\n  settings: ISettings;\n  setSettings: React.Dispatch<SetStateAction<ISettings>>;\n};\n\nconst Settings: React.FC<SettingsProps> = ({ settings, setSettings }) => {\n  return (\n    <div id=\"settings\" className=\"no-fullscreen\">\n      <h2>Settings</h2>\n\n      <SettingsForm settings={settings} setSettings={setSettings} />\n\n      <div>\n        Tip: Press <code>F11</code> to toggle fullscreen mode\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { BackendConnectionContext } from \"@/context/BackendConnectionContext\";\nimport { ClientStatus, MessageType, SocketMessage } from \"@/types\";\nimport React, { useContext, useEffect } from \"react\";\nimport { w3cwebsocket } from \"websocket\";\nimport { SettingsProps } from \"../Settings\";\nimport { ConnectionStatus } from \"./components/ConnectionStatus\";\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.max(min, Math.min(num, max));\n\nconst [minInterval, maxInterval] = [500, 1000 * 20];\n\nexport const SettingsForm: React.FC<SettingsProps> = ({\n  settings,\n  setSettings,\n}) => {\n  const backendContext = useContext(BackendConnectionContext);\n\n  useEffect(() => {\n    if (!backendContext.setClient) throw \"backendContext setClient not ready\";\n\n    const receiveImages = (images: string[]) => {\n      backendContext.setImages!(images);\n    };\n\n    const client = new w3cwebsocket(`ws://${settings.apiUrl}`);\n\n    client.onopen = () => {\n      console.log(`Web socket opened`);\n\n      backendContext.setClientStatus!(ClientStatus.OK);\n    };\n\n    client.onerror = (err) => {\n      console.error(`Error with web socket:`, err);\n\n      backendContext.setClientStatus!(ClientStatus.ERROR);\n    };\n\n    client.onmessage = (message) => {\n      backendContext.setClientStatus!(ClientStatus.OK);\n\n      try {\n        const payload = JSON.parse(String(message.data)) as SocketMessage;\n\n        switch (payload.type) {\n          case MessageType.Full:\n            receiveImages(payload.data);\n            break;\n          case MessageType.NewImage:\n            throw \"Received unsupported NewImage message\";\n          case MessageType.DeleteImage:\n            throw \"Received unsupported RemoveImage message\";\n          default:\n            console.error(`Unsupported MessageType`, (payload as any).type);\n        }\n      } catch (e) {\n        console.error(`Error parsing json:`, e);\n      }\n    };\n\n    client.onclose = () => {\n      console.log(`Web socket closed`);\n\n      backendContext.setClientStatus!(ClientStatus.DISCONNECTED);\n    };\n\n    backendContext.setClient(client);\n  }, [settings.apiUrl]);\n\n  return (\n    <form>\n      <div className=\"input intervalInput\">\n        <label htmlFor=\"interval\">\n          Interval (\n          <abbr title=\"milliseconds (NumberOfSeconds * 1000)\">ms</abbr>\n          ):\n        </label>\n\n        <input\n          type=\"number\"\n          max={1000 * 20}\n          min={500}\n          defaultValue={settings.interval}\n          step={100}\n          onChange={(e) =>\n            setSettings({\n              ...settings,\n              interval: clamp(e.target.valueAsNumber, minInterval, maxInterval),\n            })\n          }\n        />\n      </div>\n\n      <div className=\"input apiUrlInput\">\n        <label htmlFor=\"apiUrl\">API URL:</label>\n\n        <input\n          type=\"url\"\n          title=\"See me before touching this\"\n          defaultValue={settings.apiUrl}\n          onChange={(e) =>\n            setSettings({\n              ...settings,\n              apiUrl: e.target.value,\n            })\n          }\n          readOnly\n        />\n      </div>\n\n      <div className=\"input apiStatus\">\n        <ConnectionStatus />\n      </div>\n    </form>\n  );\n};\n","import { BackendConnectionContext } from \"@/context/BackendConnectionContext\";\nimport React, { useContext, useEffect } from \"react\";\n\nexport const ConnectionStatus: React.FC = () => {\n  const backendContext = useContext(BackendConnectionContext);\n\n  useEffect(() => {\n    console.log(\"READY STATE CHANGED\");\n  }, [backendContext]);\n\n  const { clientStatus } = backendContext;\n\n  return (\n    <span className=\"clientStatus\">\n      Status:{\" \"}\n      <span className={\"clientStatus-\" + clientStatus.toLowerCase()}>\n        {clientStatus}\n      </span>\n    </span>\n  );\n};\n","import Slideshow from \"./Slideshow\";\n\nexport default Slideshow;\n","import { BackendConnectionContext } from \"@/context/BackendConnectionContext\";\nimport { ISettings } from \"@/types\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Slide from \"./components/Slide\";\n\ntype SlideshowProps = {\n  settings: ISettings;\n};\n\nconst Slideshow: React.FC<SlideshowProps> = ({ settings }) => {\n  const [imageIndex, setImageIndex] = useState(0);\n  const [nextRotate, setNextRotate] = useState(Date.now());\n\n  const [imageInterval, setImageInterval] = useState(settings.interval);\n  const [apiUrl, setApiUrl] = useState(settings.apiUrl);\n  const backendContext = useContext(BackendConnectionContext);\n\n  // Tick\n  useEffect(() => {\n    const getTimestamp = () => Date.now();\n    const getNextTimestamp = () => Date.now() + imageInterval;\n\n    const tick = () => {\n      if (getTimestamp() <= nextRotate) return;\n\n      console.log(getTimestamp(), nextRotate, \"tick\");\n\n      if (!backendContext.images) return;\n\n      setImageIndex(\n        imageIndex >= backendContext.images.length - 1 ? 0 : imageIndex + 1\n      );\n      setNextRotate(getNextTimestamp());\n    };\n\n    const imageTimer = setInterval(tick, 100);\n\n    return () => clearInterval(imageTimer);\n  }, [nextRotate, imageInterval]);\n\n  useEffect(() => {\n    setImageInterval(settings.interval);\n    setApiUrl(settings.apiUrl);\n  }, [settings]);\n\n  useEffect(() => {\n    if (!backendContext.images)\n      throw \"Attempted to set image index without images array\";\n\n    if (imageIndex > backendContext.images.length - 1) setImageIndex(0);\n  }, [backendContext.images]);\n\n  let slides = [];\n\n  for (let i = 0; i < backendContext.images.length; i++) {\n    slides.push(\n      <Slide\n        key={i}\n        index={i}\n        apiUrl={apiUrl}\n        imageName={backendContext.images[i]}\n        active={i === imageIndex}\n      />\n    );\n  }\n\n  return (\n    <div id=\"slideshow\">\n      <div id=\"stats\" className=\"no-fullscreen\">\n        Currently rotating{\" \"}\n        <span className=\"highlight\">{backendContext.images.length}</span> image\n        {backendContext.images.length !== 1 ? \"s\" : \"\"}\n      </div>\n\n      <div>{slides}</div>\n    </div>\n  );\n};\n\nexport default Slideshow;\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\n\ntype Props = {\n  imageName: string;\n  index: number;\n  apiUrl: string;\n  active?: boolean;\n};\n\nconst Slide: React.FC<Props> = ({\n  imageName,\n  index,\n  apiUrl,\n  active = false,\n}) => {\n  useEffect(() => {}, [active]);\n\n  return (\n    <div className={\"slide \" + (active ? \"active\" : \"inactive\")}>\n      <label>{index + 1}</label>\n      <img\n        src={`http://${apiUrl}/img/${imageName}`}\n        alt=\"Automatically loaded image\"\n        decoding=\"async\"\n      />\n    </div>\n  );\n};\n\nexport default Slide;\n","import React from \"react\";\n\nexport const ImageOrientationWarning: React.FC = () => (\n  <div className={\"disclaimer no-fullscreen\"}>\n    <h2>Warning: Image Orientation Issues</h2>\n\n    <p>\n      For whatever reason, digital cameras and smartphones don't store pictures\n      in the orientation in which they were taken; instead, they store it in the\n      metadata.\n    </p>\n\n    <p>\n      Your browser does not support the features necessary to display pictures\n      in their proper orientation. As such, images may appear sideways.\n    </p>\n\n    <p>\n      You are free to continue, however I highly recommend you{\" \"}\n      <a\n        href=\"https://caniuse.com/?search=image-orientation\"\n        target=\"_blank\"\n        rel=\"nofollow\"\n      >\n        use a remotely modern browser\n      </a>\n      .\n    </p>\n  </div>\n);\n"],"sourceRoot":""}